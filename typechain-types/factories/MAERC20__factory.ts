/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MAERC20, MAERC20Interface } from "../MAERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000b7638038062000b768339810160408190526200003491620001db565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000281565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b6108e580620002916000396000f3fe60806040526004361061009c5760003560e01c8063313ce56711610064578063313ce5671461014a57806342966c681461017157806370a082311461019157806395d89b41146101be578063a9059cbb146101d3578063dd62ed3e146101f357600080fd5b806306fdde03146100a1578063095ea7b3146100cc5780631249c58b146100fc57806318160ddd1461010657806323b872dd1461012a575b600080fd5b3480156100ad57600080fd5b506100b6610239565b6040516100c391906106b6565b60405180910390f35b3480156100d857600080fd5b506100ec6100e7366004610727565b6102c7565b60405190151581526020016100c3565b61010461035e565b005b34801561011257600080fd5b5061011c60025481565b6040519081526020016100c3565b34801561013657600080fd5b506100ec610145366004610751565b61039d565b34801561015657600080fd5b5061015f600281565b60405160ff90911681526020016100c3565b34801561017d57600080fd5b5061010461018c36600461078d565b610470565b34801561019d57600080fd5b5061011c6101ac3660046107a6565b60036020526000908152604090205481565b3480156101ca57600080fd5b506100b6610534565b3480156101df57600080fd5b506100ec6101ee366004610727565b610541565b3480156101ff57600080fd5b5061011c61020e3660046107c8565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b60008054610246906107fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610272906107fb565b80156102bf5780601f10610294576101008083540402835291602001916102bf565b820191906000526020600020905b8154815290600101906020018083116102a257829003601f168201915b505050505081565b6000826001600160a01b0381166102f95760405162461bcd60e51b81526004016102f090610835565b60405180910390fd5b3360008181526004602090815260408083206001600160a01b03891680855290835292819020879055518681529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35060019392505050565b336000908152600360205260408120805434929061037d908490610880565b9250508190555034600260008282546103969190610880565b9091555050565b6000336001600160a01b0385161461045b576001600160a01b03841660009081526004602090815260408083203384529091529020548211156104225760405162461bcd60e51b815260206004820152601960248201527f4e6f20656e6f75676820617070726f76656420616d6f756e740000000000000060448201526064016102f0565b6001600160a01b038416600090815260046020908152604080832033845290915281208054849290610455908490610898565b90915550505b610466848484610557565b5060019392505050565b3360008181526003602052604090205482908111156104c45760405162461bcd60e51b815260206004820152601060248201526f4e6f20656e6f75676820746f6b656e7360801b60448201526064016102f0565b33600090815260036020526040812080548592906104e3908490610898565b9250508190555082600260008282546104fc9190610898565b9091555050604051339084156108fc029085906000818181858888f1935050505015801561052e573d6000803e3d6000fd5b50505050565b60018054610246906107fb565b600061054e338484610557565b50600192915050565b826001600160a01b03811661057e5760405162461bcd60e51b81526004016102f090610835565b826001600160a01b0381166105a55760405162461bcd60e51b81526004016102f090610835565b6001600160a01b038516600090815260036020526040902054859084908111156106045760405162461bcd60e51b815260206004820152601060248201526f4e6f20656e6f75676820746f6b656e7360801b60448201526064016102f0565b6001600160a01b0387166000908152600360205260408120805487929061062c908490610898565b90915550506001600160a01b03861660009081526003602052604081208054879290610659908490610880565b92505081905550856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040516106a591815260200190565b60405180910390a350505050505050565b600060208083528351808285015260005b818110156106e3578581018301518582016040015282016106c7565b818111156106f5576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461072257600080fd5b919050565b6000806040838503121561073a57600080fd5b6107438361070b565b946020939093013593505050565b60008060006060848603121561076657600080fd5b61076f8461070b565b925061077d6020850161070b565b9150604084013590509250925092565b60006020828403121561079f57600080fd5b5035919050565b6000602082840312156107b857600080fd5b6107c18261070b565b9392505050565b600080604083850312156107db57600080fd5b6107e48361070b565b91506107f26020840161070b565b90509250929050565b600181811c9082168061080f57607f821691505b60208210810361082f57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f546865207a65726f2d61646472657373206973206e6f7420616c6c6f7765642e604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156108935761089361086a565b500190565b6000828210156108aa576108aa61086a565b50039056fea26469706673582212203d0a91063b493f050d1065437b90b8c79da0d35a3142d9906739abcbe120577864736f6c634300080d0033";

type MAERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MAERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MAERC20__factory extends ContractFactory {
  constructor(...args: MAERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    tokenName: string,
    tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MAERC20> {
    return super.deploy(
      tokenName,
      tokenSymbol,
      overrides || {}
    ) as Promise<MAERC20>;
  }
  override getDeployTransaction(
    tokenName: string,
    tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenName, tokenSymbol, overrides || {});
  }
  override attach(address: string): MAERC20 {
    return super.attach(address) as MAERC20;
  }
  override connect(signer: Signer): MAERC20__factory {
    return super.connect(signer) as MAERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MAERC20Interface {
    return new utils.Interface(_abi) as MAERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MAERC20 {
    return new Contract(address, _abi, signerOrProvider) as MAERC20;
  }
}
