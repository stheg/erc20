/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MAERC20, MAERC20Interface } from "../MAERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000c2838038062000c288339810160408190526200003491620001ed565b8151620000499060009060208501906200007a565b5080516200005f9060019060208401906200007a565b5050600580546001600160a01b031916331790555062000293565b828054620000889062000257565b90600052602060002090601f016020900481019282620000ac5760008555620000f7565b82601f10620000c757805160ff1916838001178555620000f7565b82800160010185558215620000f7579182015b82811115620000f7578251825591602001919060010190620000da565b506200010592915062000109565b5090565b5b808211156200010557600081556001016200010a565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200014857600080fd5b81516001600160401b038082111562000165576200016562000120565b604051601f8301601f19908116603f0116810190828211818310171562000190576200019062000120565b81604052838152602092508683858801011115620001ad57600080fd5b600091505b83821015620001d15785820183015181830184015290820190620001b2565b83821115620001e35760008385830101525b9695505050505050565b600080604083850312156200020157600080fd5b82516001600160401b03808211156200021957600080fd5b620002278683870162000136565b935060208501519150808211156200023e57600080fd5b506200024d8582860162000136565b9150509250929050565b600181811c908216806200026c57607f821691505b6020821081036200028d57634e487b7160e01b600052602260045260246000fd5b50919050565b61098580620002a36000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806340c10f191161007157806340c10f191461013357806342966c681461014857806370a082311461015b57806395d89b411461017b578063a9059cbb14610183578063dd62ed3e1461019657600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610106578063313ce56714610119575b600080fd5b6100b66101cf565b6040516100c39190610756565b60405180910390f35b6100df6100da3660046107c7565b61025d565b60405190151581526020016100c3565b6100f860025481565b6040519081526020016100c3565b6100df6101143660046107f1565b6102f4565b610121600281565b60405160ff90911681526020016100c3565b6101466101413660046107c7565b6103c7565b005b61014661015636600461082d565b6104ac565b6100f8610169366004610846565b60036020526000908152604090205481565b6100b66105d4565b6100df6101913660046107c7565b6105e1565b6100f86101a4366004610868565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b600080546101dc9061089b565b80601f01602080910402602001604051908101604052809291908181526020018280546102089061089b565b80156102555780601f1061022a57610100808354040283529160200191610255565b820191906000526020600020905b81548152906001019060200180831161023857829003601f168201915b505050505081565b6000826001600160a01b03811661028f5760405162461bcd60e51b8152600401610286906108d5565b60405180910390fd5b3360008181526004602090815260408083206001600160a01b03891680855290835292819020879055518681529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35060019392505050565b6000336001600160a01b038516146103b2576001600160a01b03841660009081526004602090815260408083203384529091529020548211156103795760405162461bcd60e51b815260206004820152601960248201527f4e6f20656e6f75676820617070726f76656420616d6f756e74000000000000006044820152606401610286565b6001600160a01b0384166000908152600460209081526040808320338452909152812080548492906103ac908490610920565b90915550505b6103bd8484846105f7565b5060019392505050565b6005546001600160a01b031633146104215760405162461bcd60e51b815260206004820152601b60248201527f4f6e6c7920746865206f776e65722063616e20646f20746869732e00000000006044820152606401610286565b6001600160a01b03821660009081526003602052604081208054839290610449908490610937565b9250508190555080600260008282546104629190610937565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6005546001600160a01b031633146105065760405162461bcd60e51b815260206004820152601b60248201527f4f6e6c7920746865206f776e65722063616e20646f20746869732e00000000006044820152606401610286565b33600081815260036020526040902054829081111561055a5760405162461bcd60e51b815260206004820152601060248201526f4e6f20656e6f75676820746f6b656e7360801b6044820152606401610286565b3360009081526003602052604081208054859290610579908490610920565b9250508190555082600260008282546105929190610920565b909155505060405183815260009033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600180546101dc9061089b565b60006105ee3384846105f7565b50600192915050565b826001600160a01b03811661061e5760405162461bcd60e51b8152600401610286906108d5565b826001600160a01b0381166106455760405162461bcd60e51b8152600401610286906108d5565b6001600160a01b038516600090815260036020526040902054859084908111156106a45760405162461bcd60e51b815260206004820152601060248201526f4e6f20656e6f75676820746f6b656e7360801b6044820152606401610286565b6001600160a01b038716600090815260036020526040812080548792906106cc908490610920565b90915550506001600160a01b038616600090815260036020526040812080548792906106f9908490610937565b92505081905550856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8760405161074591815260200190565b60405180910390a350505050505050565b600060208083528351808285015260005b8181101561078357858101830151858201604001528201610767565b81811115610795576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146107c257600080fd5b919050565b600080604083850312156107da57600080fd5b6107e3836107ab565b946020939093013593505050565b60008060006060848603121561080657600080fd5b61080f846107ab565b925061081d602085016107ab565b9150604084013590509250925092565b60006020828403121561083f57600080fd5b5035919050565b60006020828403121561085857600080fd5b610861826107ab565b9392505050565b6000806040838503121561087b57600080fd5b610884836107ab565b9150610892602084016107ab565b90509250929050565b600181811c908216806108af57607f821691505b6020821081036108cf57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f546865207a65726f2d61646472657373206973206e6f7420616c6c6f7765642e604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156109325761093261090a565b500390565b6000821982111561094a5761094a61090a565b50019056fea26469706673582212204d245c913ea1fcb169f896808ba72530f568e10550eba415b642bb272fd0021564736f6c634300080d0033";

type MAERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MAERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MAERC20__factory extends ContractFactory {
  constructor(...args: MAERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    tokenName: string,
    tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MAERC20> {
    return super.deploy(
      tokenName,
      tokenSymbol,
      overrides || {}
    ) as Promise<MAERC20>;
  }
  override getDeployTransaction(
    tokenName: string,
    tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenName, tokenSymbol, overrides || {});
  }
  override attach(address: string): MAERC20 {
    return super.attach(address) as MAERC20;
  }
  override connect(signer: Signer): MAERC20__factory {
    return super.connect(signer) as MAERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MAERC20Interface {
    return new utils.Interface(_abi) as MAERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MAERC20 {
    return new Contract(address, _abi, signerOrProvider) as MAERC20;
  }
}
